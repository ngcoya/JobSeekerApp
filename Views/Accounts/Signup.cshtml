@model ReGoAuthentication.Models.User

@{
    ViewBag.Title = "Signup";
}

<h2>Signup</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Passcode, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passcode, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.Passcode, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Passcode, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                @Html.EditorFor(model => model.Passcode, new { htmlAttributes = new { @class = "form-control", type = "password", id = "passcodeInput" } })
                <div class="input-group-append">
                    <span class="btn btn-default input-group-text" id="togglePassword">Show password</span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Passcode, "", new { @class = "text-danger" })
        </div>
    </div>


    @*<div class="form-group">
        @Html.LabelFor(model => model.Passcode, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Passcode, new { htmlAttributes = new { @class = "form-control", type = "password" } })
            @Html.ValidationMessageFor(model => model.Passcode, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <script>
        var passcodeInput = document.getElementById("passcodeInput");
        var togglePassword = document.getElementById("togglePassword");

        togglePassword.addEventListener("click", function () {
            if (passcodeInput.type === "password") {
                passcodeInput.type = "text";
                togglePassword.textContent = "Hide Password";
            } else {
                passcodeInput.type = "password";
                togglePassword.textContent = "Show Password";
            }
        });
    </script>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Register" class="btn btn-info" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

}
